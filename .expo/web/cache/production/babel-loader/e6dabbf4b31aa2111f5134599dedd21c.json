{"ast":null,"code":"import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{NavigationContext}from'react-navigation';import Header from\"./Header\";import{forSlideLeft,forSlideUp,forNoAnimation,forSlideRight}from\"../../TransitionConfigs/HeaderStyleInterpolators\";import HeaderShownContext from\"../../utils/HeaderShownContext\";export default function HeaderContainer(_ref){var mode=_ref.mode,scenes=_ref.scenes,layout=_ref.layout,insets=_ref.insets,getFocusedRoute=_ref.getFocusedRoute,getPreviousRoute=_ref.getPreviousRoute,onContentHeightChange=_ref.onContentHeightChange,gestureDirection=_ref.gestureDirection,styleInterpolator=_ref.styleInterpolator,style=_ref.style;var focusedRoute=getFocusedRoute();var isParentHeaderShown=React.useContext(HeaderShownContext);return React.createElement(View,{pointerEvents:\"box-none\",style:style},scenes.slice(-3).map(function(scene,i,self){if(mode==='screen'&&i!==self.length-1||!scene){return null;}var _ref2=scene.descriptor.options||{},header=_ref2.header,_ref2$headerShown=_ref2.headerShown,headerShown=_ref2$headerShown===void 0?isParentHeaderShown===false:_ref2$headerShown,headerTransparent=_ref2.headerTransparent;if(!headerShown){return null;}var isFocused=focusedRoute.key===scene.route.key;var previousRoute=getPreviousRoute({route:scene.route});var previous;if(previousRoute){for(var j=i-1;j>=0;j--){var s=self[j];if(s&&s.route.key===previousRoute.key){previous=s;break;}}}var previousScene=self[i-1];var nextScene=self[i+1];var _ref3=(previousScene===null||previousScene===void 0?void 0:previousScene.descriptor.options)||{},_ref3$headerShown=_ref3.headerShown,previousHeaderShown=_ref3$headerShown===void 0?isParentHeaderShown===false:_ref3$headerShown;var _ref4=(nextScene===null||nextScene===void 0?void 0:nextScene.descriptor.options)||{},_ref4$headerShown=_ref4.headerShown,nextHeaderShown=_ref4$headerShown===void 0?isParentHeaderShown===false:_ref4$headerShown;var isHeaderStatic=previousHeaderShown===false&&!nextScene||nextHeaderShown===false;var props={mode:mode,layout:layout,insets:insets,scene:scene,previous:previous,navigation:scene.descriptor.navigation,styleInterpolator:mode==='float'?isHeaderStatic?gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?forSlideUp:gestureDirection==='horizontal-inverted'?forSlideRight:forSlideLeft:styleInterpolator:forNoAnimation};return React.createElement(NavigationContext.Provider,{key:scene.route.key,value:scene.descriptor.navigation},React.createElement(React.Fragment,null,React.createElement(View,{onLayout:onContentHeightChange?function(e){return onContentHeightChange({route:scene.route,height:e.nativeEvent.layout.height});}:undefined,pointerEvents:isFocused?'box-none':'none',accessibilityElementsHidden:!isFocused,importantForAccessibility:isFocused?'auto':'no-hide-descendants',style:mode==='float'&&!isFocused||headerTransparent?styles.header:null},header!==undefined?header(props):React.createElement(Header,props))));}));}var styles=StyleSheet.create({header:{position:'absolute',top:0,left:0,right:0}});","map":{"version":3,"sources":["HeaderContainer.tsx"],"names":["style","focusedRoute","getFocusedRoute","isParentHeaderShown","React","mode","i","self","headerShown","headerTransparent","scene","isFocused","previousRoute","getPreviousRoute","route","j","s","previous","previousScene","nextScene","previousHeaderShown","nextHeaderShown","isHeaderStatic","props","layout","insets","navigation","styleInterpolator","gestureDirection","forNoAnimation","onContentHeightChange","e","height","styles","header","position","top","left","right"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport { NavigationContext } from 'react-navigation';\nimport { EdgeInsets } from 'react-native-safe-area-context';\n\nimport Header from './Header';\nimport {\n  forSlideLeft,\n  forSlideUp,\n  forNoAnimation,\n  forSlideRight,\n} from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport HeaderShownContext from '../../utils/HeaderShownContext';\nimport {\n  Route,\n  Layout,\n  Scene,\n  StackHeaderStyleInterpolator,\n  StackNavigationProp,\n  GestureDirection,\n} from '../../types';\n\nexport type Props = {\n  mode: 'float' | 'screen';\n  layout: Layout;\n  insets: EdgeInsets;\n  scenes: (Scene<Route<string>> | undefined)[];\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  getFocusedRoute: () => Route<string>;\n  onContentHeightChange?: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n  styleInterpolator: StackHeaderStyleInterpolator;\n  gestureDirection: GestureDirection;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport default function HeaderContainer({\n  mode,\n  scenes,\n  layout,\n  insets,\n  getFocusedRoute,\n  getPreviousRoute,\n  onContentHeightChange,\n  gestureDirection,\n  styleInterpolator,\n  style,\n}: Props) {\n  const focusedRoute = getFocusedRoute();\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n\n  return (\n    <View pointerEvents=\"box-none\" style={style}>\n      {scenes.slice(-3).map((scene, i, self) => {\n        if ((mode === 'screen' && i !== self.length - 1) || !scene) {\n          return null;\n        }\n\n        const {\n          header,\n          headerShown = isParentHeaderShown === false,\n          headerTransparent,\n        } = scene.descriptor.options || {};\n\n        if (!headerShown) {\n          return null;\n        }\n\n        const isFocused = focusedRoute.key === scene.route.key;\n        const previousRoute = getPreviousRoute({ route: scene.route });\n\n        let previous;\n\n        if (previousRoute) {\n          // The previous scene will be shortly before the current scene in the array\n          // So loop back from current index to avoid looping over the full array\n          for (let j = i - 1; j >= 0; j--) {\n            const s = self[j];\n\n            if (s && s.route.key === previousRoute.key) {\n              previous = s;\n              break;\n            }\n          }\n        }\n\n        // If the screen is next to a headerless screen, we need to make the header appear static\n        // This makes the header look like it's moving with the screen\n        const previousScene = self[i - 1];\n        const nextScene = self[i + 1];\n\n        const {\n          headerShown: previousHeaderShown = isParentHeaderShown === false,\n        } = previousScene?.descriptor.options || {};\n\n        const { headerShown: nextHeaderShown = isParentHeaderShown === false } =\n          nextScene?.descriptor.options || {};\n\n        const isHeaderStatic =\n          (previousHeaderShown === false &&\n            // We still need to animate when coming back from next scene\n            // A hacky way to check this is if the next scene exists\n            !nextScene) ||\n          nextHeaderShown === false;\n\n        const props = {\n          mode,\n          layout,\n          insets,\n          scene,\n          previous,\n          navigation: scene.descriptor.navigation as StackNavigationProp,\n          styleInterpolator:\n            mode === 'float'\n              ? isHeaderStatic\n                ? gestureDirection === 'vertical' ||\n                  gestureDirection === 'vertical-inverted'\n                  ? forSlideUp\n                  : gestureDirection === 'horizontal-inverted'\n                  ? forSlideRight\n                  : forSlideLeft\n                : styleInterpolator\n              : forNoAnimation,\n        };\n\n        return (\n          <NavigationContext.Provider\n            key={scene.route.key}\n            value={scene.descriptor.navigation}\n          >\n            <>\n              <View\n                onLayout={\n                  onContentHeightChange\n                    ? (e) =>\n                        onContentHeightChange({\n                          route: scene.route,\n                          height: e.nativeEvent.layout.height,\n                        })\n                    : undefined\n                }\n                pointerEvents={isFocused ? 'box-none' : 'none'}\n                accessibilityElementsHidden={!isFocused}\n                importantForAccessibility={\n                  isFocused ? 'auto' : 'no-hide-descendants'\n                }\n                style={\n                  // Avoid positioning the focused header absolutely\n                  // Otherwise accessibility tools don't seem to be able to find it\n                  (mode === 'float' && !isFocused) || headerTransparent\n                    ? styles.header\n                    : null\n                }\n              >\n                {header !== undefined ? header(props) : <Header {...props} />}\n              </View>\n            </>\n          </NavigationContext.Provider>\n        );\n      })}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}